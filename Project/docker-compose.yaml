version: '3'
services:
  clickhouse:
    image: yandex/clickhouse-server
    container_name: my-clickhouse
    ports:
      - "8123:10001"
    volumes:
      - ./Docker-init-scripts/clickhouse:/docker-entrypoint-initdb.d

  redis:
    image: redis
    container_name: my-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - ./Docker-init-scripts/redis:/docker-entrypoint-initdb.d

  postgres:
    image: postgres:14
    container_name: my-postgres
    environment:
      - POSTGRES_PASSWORD=readyset
      - POSTGRES_DB=test
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 12
    volumes:
      - ./Docker-init-scripts/postgres:/docker-entrypoint-initdb.d


  readyset-cache:
    image: docker.io/readysettech/readyset:latest
    container_name: my-readyset
    platform: linux/amd64
    ports:
      # The ReadySet Adapter listen port, i.e. what your application / SQL shell connects to
      - "5433:5433"
      # ReadySet Prometheus metrics available at http://localhost:6034/metrics
      # e.g. curl -X GET http://localhost:6034/metrics
      - "6034:6034"
    environment:
      DEPLOYMENT_ENV: quickstart_docker
      DB_DIR: /state
      PROMETHEUS_METRICS: true
      QUERY_CACHING: explicit
      QUERY_LOG_MODE: all-queries
      STANDALONE: true
      DEPLOYMENT: docker_compose_deployment
      LISTEN_ADDRESS: 0.0.0.0:5433
      UPSTREAM_DB_URL: postgresql://postgres:readyset@postgres/market
      CONTROLLER_ADDRESS: 0.0.0.0
    healthcheck:
      test: [ "CMD", "curl", "--fail", "127.0.0.1:6034/health" ]
      interval: 2s
      timeout: 1s
      retries: 5
      start_period: 5s
    depends_on:
      postgres:
        condition: service_healthy
